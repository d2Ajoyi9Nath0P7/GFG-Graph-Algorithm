void dfs(int node,vector<int>&vis,vector<int>adj[],stack<int>&st)
{
    vis[node] = 1;
    for(auto child : adj[node])
    {
        if(!vis[child])
        {
            dfs(child,vis,adj,st);
        }
    }
    st.push(node);
}

vector<int> findOrder(int n, vector<vector<int>> prerequisites)
{
    vector<int>adj[n];
    for(auto it : prerequisites)
    {
        int u = it[1];//
        int v = it[0];//
        adj[u].push_back(v);
    }
    stack<int>st;
    vector<int>vis(n,0);
    for(int i = 0 ; i < n ; i++)
    {
        if(!vis[i])
        {
            dfs(i,vis,adj,st);
        }
    }
    vector<int>res;
    while(!st.empty())
    {
        res.push_back(st.top());
        st.pop();
    }

    return res;
}
