void solve(int node,vector<int>adj[],vector<int>&visited,stack<int>&st)
{
    visited[node] = 1;
    for(auto child : adj[node])
    {
        if(!visited[child])
        {
            solve(child,adj,visited,st);
        }
    }
    st.push(node);
}

vector<int> topoSort(int V, vector<vector<int>>& edges)
{
    vector<int>adj[V];
    for(auto i : edges)
    {
        int u = i[0];
        int v = i[1];
        adj[u].push_back(v);
    }
    stack<int>st;
    vector<int>visited(V,0);
    for(int i = 0 ; i < V ; i++)
    {
        if(!visited[i])
        {
            solve(i,adj,visited,st);
        }
    }
    vector<int>res;
    while(!st.empty())
    {
        res.push_back(st.top());
        st.pop();
    }

    return res;
}
